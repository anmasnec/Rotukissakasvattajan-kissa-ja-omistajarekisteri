package rekisteri.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import rekisteri.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.03.16 20:27:31 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class OmistajatTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaa48 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa48() throws SailoException {    // Omistajat: 48
    Omistajat omistajat = new Omistajat(); 
    Omistaja sadepilvinen1 = new Omistaja(), sadepilvinen2 = new Omistaja(); 
    assertEquals("From: Omistajat line: 52", 0, omistajat.getLkm()); 
    omistajat.lisaa(sadepilvinen1); assertEquals("From: Omistajat line: 53", 1, omistajat.getLkm()); 
    omistajat.lisaa(sadepilvinen2); assertEquals("From: Omistajat line: 54", 2, omistajat.getLkm()); 
    omistajat.lisaa(sadepilvinen1); assertEquals("From: Omistajat line: 55", 3, omistajat.getLkm()); 
    assertEquals("From: Omistajat line: 56", sadepilvinen1, omistajat.annaOmistaja(0)); 
    assertEquals("From: Omistajat line: 57", sadepilvinen2, omistajat.annaOmistaja(1)); 
    assertEquals("From: Omistajat line: 58", sadepilvinen1, omistajat.annaOmistaja(2)); 
    assertEquals("From: Omistajat line: 59", false, omistajat.annaOmistaja(1) == sadepilvinen1); 
    assertEquals("From: Omistajat line: 60", true, omistajat.annaOmistaja(1) == sadepilvinen2); 
    try {
    assertEquals("From: Omistajat line: 61", sadepilvinen1, omistajat.annaOmistaja(3)); 
    fail("Omistajat: 61 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    omistajat.lisaa(sadepilvinen1); assertEquals("From: Omistajat line: 62", 4, omistajat.getLkm()); 
    omistajat.lisaa(sadepilvinen1); assertEquals("From: Omistajat line: 63", 5, omistajat.getLkm()); 
    omistajat.lisaa(sadepilvinen1); assertEquals("From: Omistajat line: 64", 6, omistajat.getLkm()); 
    omistajat.lisaa(sadepilvinen1); assertEquals("From: Omistajat line: 65", 7, omistajat.getLkm()); 
    omistajat.lisaa(sadepilvinen1); assertEquals("From: Omistajat line: 66", 8, omistajat.getLkm()); 
    omistajat.lisaa(sadepilvinen1); assertEquals("From: Omistajat line: 67", 9, omistajat.getLkm()); 
    omistajat.lisaa(sadepilvinen1); assertEquals("From: Omistajat line: 68", 10, omistajat.getLkm()); 
    try {
    omistajat.lisaa(sadepilvinen1); 
    fail("Omistajat: 69 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnnaOmistajat209 
   * @throws SailoException when error
   */
  @Test
  public void testAnnaOmistajat209() throws SailoException {    // Omistajat: 209
    Omistajat kissafanit = new Omistajat(); 
    Omistaja sadepilvinen21 = new Omistaja(2); kissafanit.lisaa(sadepilvinen21); 
    Omistaja sadepilvinen11 = new Omistaja(1); kissafanit.lisaa(sadepilvinen11); 
    Omistaja sadepilvinen22 = new Omistaja(2); kissafanit.lisaa(sadepilvinen22); 
    Omistaja sadepilvinen12 = new Omistaja(1); kissafanit.lisaa(sadepilvinen12); 
    Omistaja sadepilvinen23 = new Omistaja(2); kissafanit.lisaa(sadepilvinen23); 
    Omistaja sadepilvinen51 = new Omistaja(5); kissafanit.lisaa(sadepilvinen51); 
    Omistaja[] loytyneet = new Omistaja[10]; 
    loytyneet = kissafanit.annaOmistajat(1); 
    assertEquals("From: Omistajat line: 221", 2, loytyneet.length); 
    assertEquals("From: Omistajat line: 222", true, loytyneet[0] == sadepilvinen11); 
    assertEquals("From: Omistajat line: 223", true, loytyneet[1] == sadepilvinen12); 
    loytyneet = kissafanit.annaOmistajat(5); 
    assertEquals("From: Omistajat line: 225", 1, loytyneet.length); 
    assertEquals("From: Omistajat line: 226", true, loytyneet[0] == sadepilvinen51); 
  } // Generated by ComTest END
}