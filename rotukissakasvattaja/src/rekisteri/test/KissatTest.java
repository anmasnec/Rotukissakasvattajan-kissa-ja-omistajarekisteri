package rekisteri.test;
// Generated by ComTest BEGIN
import java.io.File;
import rekisteri.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.04.01 21:53:55 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class KissatTest {



  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta73 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta73() throws SailoException {    // Kissat: 73
    Kissat kissat = new Kissat(); 
    Kissa sadepilvi1 = new Kissa(), sadepilvi2 = new Kissa(); 
    sadepilvi1.taytaKissaTiedoilla(); 
    sadepilvi2.taytaKissaTiedoilla(); 
    String hakemisto = "testiKissakaveri"; 
    String tiedNimi = hakemisto+"/kissat"; 
    File ftied = new File(tiedNimi+".dat"); 
    File dir = new File(hakemisto); 
    dir.mkdir(); 
    kissat.lueTiedostosta(tiedNimi); 
    kissat.lisaa(sadepilvi1); 
    kissat.lisaa(sadepilvi2); 
    kissat.tallenna(); 
    kissat = new Kissat();  // Poistetaan vanhat luomalla uusi
    kissat.lueTiedostosta(tiedNimi);  // johon ladataan tiedot tiedostosta.
    Iterator<Kissa> i = kissat.iterator(); 
    assertEquals("From: Kissat line: 93", sadepilvi1.getNimi(), i.next().getNimi()); 
    kissat.lisaa(sadepilvi2); 
    kissat.tallenna(); 
    assertEquals("From: Kissat line: 96", true, ftied.delete()); 
    File fbak = new File(tiedNimi+".bak"); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKissatIterator234 
   * @throws SailoException when error
   */
  @Test
  public void testKissatIterator234() throws SailoException {    // Kissat: 234
    Kissat kissat = new Kissat(); 
    Kissa sadepilvi1 = new Kissa(), sadepilvi2 = new Kissa(); 
    sadepilvi1.rekisteroi(); sadepilvi2.rekisteroi(); 
    kissat.lisaa(sadepilvi1); 
    kissat.lisaa(sadepilvi2); 
    kissat.lisaa(sadepilvi1); 
    StringBuffer ids = new StringBuffer(30); 
    for (Kissa kissa:kissat) // Kokeillaan for-silmukan toimintaa
    ids.append(" "+kissa.getKissanTunnusNro()); 
    String tulos = " " + sadepilvi1.getKissanTunnusNro() + " " + sadepilvi2.getKissanTunnusNro() + " " + sadepilvi1.getKissanTunnusNro(); 
    assertEquals("From: Kissat line: 253", tulos, ids.toString()); 
    ids = new StringBuffer(30); 
    for (Iterator<Kissa>  i=kissat.iterator(); i.hasNext(); ) { // ja iteraattorin toimintaa
    Kissa kissa = i.next(); 
    ids.append(" "+kissa.getKissanTunnusNro()); 
    }
    assertEquals("From: Kissat line: 261", tulos, ids.toString()); 
    Iterator<Kissa>  i=kissat.iterator(); 
    assertEquals("From: Kissat line: 264", true, i.next() == sadepilvi1); 
    assertEquals("From: Kissat line: 265", true, i.next() == sadepilvi2); 
    assertEquals("From: Kissat line: 266", true, i.next() == sadepilvi1); 
    try {
    i.next(); 
    fail("Kissat: 268 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsi343 
   * @throws SailoException when error
   */
  @Test
  public void testEtsi343() throws SailoException {    // Kissat: 343
    Kissat kissat = new Kissat(); 
    Kissa kissa1 = new Kissa(); kissa1.parse("1|1|Kissakaveri Sadepilvi|Ragdoll|RAG n 03|Ruskeanaamio bicolour|"); 
    Kissa kissa2 = new Kissa(); kissa2.parse("2|2|Kissakaveri Saniainen|Ragdoll|RAG n 04|Ruskeanaamio mitted|"); 
    Kissa kissa3 = new Kissa(); kissa3.parse("3|3|Kissakaveri Sateenkaari|Ragdoll|RAG n 03|Ruskeanaamio bicolour|"); 
    Kissa kissa4 = new Kissa(); kissa4.parse("4|4|Kissakaveri April|Ragdoll|RAG a|Sininaamio colourpoint|"); 
    Kissa kissa5 = new Kissa(); kissa5.parse("5|5|Kissakaveri Peter Pan|Ragdoll|RAG a 04|Sininaamio mitted|"); 
    kissat.lisaa(kissa1); kissat.lisaa(kissa2); kissat.lisaa(kissa3); kissat.lisaa(kissa4); kissat.lisaa(kissa5); 
  } // Generated by ComTest END
}