package rekisteri.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import rekisteri.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.04.20 22:36:54 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class KissaTest {



  // Generated by ComTest BEGIN
  /** testGetNimi126 */
  @Test
  public void testGetNimi126() {    // Kissa: 126
    Kissa sadepilvi = new Kissa(); 
    sadepilvi.taytaKissaTiedoilla(); 
    { String _l_=sadepilvi.getNimi(),_r_="Kissakaveri Sadepilvi"; if ( !_l_.matches(_r_) ) fail("From: Kissa line: 129" + " does not match: ["+ _l_ + "] != [" + _r_ + "]");}; 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAseta189 */
  @Test
  public void testAseta189() {    // Kissa: 189
    Kissa kissa = new Kissa(); 
    assertEquals("From: Kissa line: 191", null, kissa.aseta(1,"Sadepilvi")); 
    assertEquals("From: Kissa line: 192", null, kissa.aseta(7,"naaras")); 
    assertEquals("From: Kissa line: 193", "Rekisterinumero liian lyhyt", kissa.aseta(6, "FI KS NO 123456")); 
    assertEquals("From: Kissa line: 194", null, kissa.aseta(6, "FI KS NO 1234567")); 
    assertEquals("From: Kissa line: 195", "Rekisterinumero liian lyhyt", kissa.aseta(10, "FI KS NO 223456")); 
    assertEquals("From: Kissa line: 196", "Rekisterinumero liian lyhyt", kissa.aseta(12, "FI KS NO 323456")); 
    assertEquals("From: Kissa line: 197", null, kissa.aseta(10, "FI KS NO 2234567")); 
    assertEquals("From: Kissa line: 198", null, kissa.aseta(12, "FI KS NO 3234567")); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testRekisteroi389 */
  @Test
  public void testRekisteroi389() {    // Kissa: 389
    Kissa sadepilvi1 = new Kissa(); 
    assertEquals("From: Kissa line: 391", 0, sadepilvi1.getKissanTunnusNro()); 
    sadepilvi1.rekisteroi(); 
    Kissa sadepilvi2 = new Kissa(); 
    sadepilvi2.rekisteroi(); 
    int n1 = sadepilvi1.getKissanTunnusNro(); 
    int n2 = sadepilvi2.getKissanTunnusNro(); 
    assertEquals("From: Kissa line: 397", n2-1, n1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString451 */
  @Test
  public void testToString451() {    // Kissa: 451
    Kissa kissa = new Kissa(); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse477 */
  @Test
  public void testParse477() {    // Kissa: 477
    Kissa kissa = new Kissa(); 
    kissa.parse("   1  |  1   | Kissakaveri Sadepilvi"); 
    assertEquals("From: Kissa line: 480", 1, kissa.getKissanTunnusNro()); 
    assertEquals("From: Kissa line: 481", true, kissa.toString().startsWith("1|1|Kissakaveri Sadepilvi|"));  // on enemmäkin kuin 3 kenttää, siksi loppu |
    kissa.rekisteroi(); 
    int n = kissa.getKissanTunnusNro(); 
    kissa.parse(""+(n+20));  // Otetaan merkkijonosta vain tunnusnumero
    kissa.rekisteroi();  // ja tarkistetaan että seuraavalla kertaa tulee yhtä isompi
    assertEquals("From: Kissa line: 487", n+20+1, kissa.getKissanTunnusNro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testClone501 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testClone501() throws CloneNotSupportedException {    // Kissa: 501
    Kissa kissa = new Kissa(); 
    kissa.parse("   3  | Kissakaveri Sadepilvi  | Ragdoll"); 
    Kissa kopio = kissa.clone(); 
    assertEquals("From: Kissa line: 506", kissa.toString(), kopio.toString()); 
    kissa.parse("   4  | Kissakaveri April   | Ragdoll"); 
    assertEquals("From: Kissa line: 508", false, kopio.toString().equals(kissa.toString())); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testEquals524 */
  @Test
  public void testEquals524() {    // Kissa: 524
    Kissa kissa1 = new Kissa(); 
    kissa1.parse("   1  |  Kissakaveri Sadepilvi   | Ragdoll"); 
    Kissa kissa2 = new Kissa(); 
    kissa2.parse("   1  |  Kissakaveri Sadepilvi   | Ragdoll"); 
    Kissa kissa3 = new Kissa(); 
    kissa3.parse("   2  |  Kissakaveri Saniainen   | Ragdoll"); 
    assertEquals("From: Kissa line: 532", true, kissa1.equals(kissa2)); 
    assertEquals("From: Kissa line: 533", true, kissa2.equals(kissa1)); 
    assertEquals("From: Kissa line: 534", false, kissa1.equals(kissa3)); 
    assertEquals("From: Kissa line: 535", false, kissa3.equals(kissa2)); 
  } // Generated by ComTest END
}